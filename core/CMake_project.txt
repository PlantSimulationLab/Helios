if ( WIN32 )
    SET(CMAKE_C_COMPILER_ID "MSVC")
    SET(CMAKE_CXX_COMPILER_ID "MSVC")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++latest")
    string(REGEX REPLACE "/MD*" "/MT" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
    string(REGEX REPLACE "/MD*" "/MT" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    string(REGEX REPLACE "/W[0-4]" "/W1" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
    string(REGEX REPLACE "/W[0-4]" "/W1" CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
    cmake_policy(SET CMP0091 NEW)
    set( CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded")
    foreach( OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES} )
        string( TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG )
        set( CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} "${CMAKE_BINARY_DIR}" )
        set( CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} "${CMAKE_BINARY_DIR}/lib" )
        set( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} "${CMAKE_BINARY_DIR}/lib" )
    endforeach( OUTPUTCONFIG CMAKE_CONFIGURATION_TYPES )
else()
    SET(CMAKE_C_COMPILER_ID "GNU")
    SET(CMAKE_CXX_COMPILER_ID "GNU")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    if( CMAKE_BUILD_TYPE STREQUAL Debug )
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g" )
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")
    endif()
endif()
if( CMAKE_BUILD_TYPE STREQUAL Debug )
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DHELIOS_DEBUG" )
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DHELIOS_DEBUG")
endif()
cmake_policy(SET CMP0079 NEW)

if(NOT DEFINED CMAKE_SUPPRESS_DEVELOPER_WARNINGS)
    set(CMAKE_SUPPRESS_DEVELOPER_WARNINGS 1 CACHE INTERNAL "No dev warnings")
endif()
set( EXECUTABLE_NAME ${EXECUTABLE_NAME} )
set( LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib )
set( CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}" CACHE STRING "" )
set( CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/lib" CACHE STRING "" )
add_executable( ${EXECUTABLE_NAME} ${SOURCE_FILES} )
add_subdirectory( "${BASE_DIRECTORY}/core" "lib" )
target_link_libraries( ${EXECUTABLE_NAME} helios)
LIST(LENGTH PLUGINS PLUGIN_COUNT)
message("-- Loading ${PLUGIN_COUNT} plug-ins")
foreach(PLUGIN ${PLUGINS})
    message("-- loading plug-in ${PLUGIN}")
    if( ${PLUGIN} STREQUAL ${EXECUTABLE_NAME} )
        message( FATAL_ERROR "The executable name cannot be the same as a plugin name. Please rename your executable." )
    endif()
    add_subdirectory( "${BASE_DIRECTORY}/plugins/${PLUGIN}" "${PROJECT_BINARY_DIR}/plugins/${PLUGIN}" )
    target_link_libraries( ${EXECUTABLE_NAME} ${PLUGIN} )
    target_link_libraries( ${PLUGIN} helios )
endforeach(PLUGIN)
include_directories( "${PLUGIN_INCLUDE_PATHS};${CMAKE_CURRENT_SOURCE_DIRECTORY}" )